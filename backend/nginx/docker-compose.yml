version: '3'
services:
  nginx-web:
    image: nginx
    labels:
        com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    container_name: ${NGINX_WEB:-nginx-web}
    restart: always
    ports:
      - "${IP:-0.0.0.0}:${DOCKER_HTTP:-80}:80"
      - "${IP:-0.0.0.0}:${DOCKER_HTTPS:-443}:443"
    volumes:
      - ${NGINX_FILES_PATH:-./data}/conf.d:/etc/nginx/conf.d
      - ${NGINX_FILES_PATH:-./data}/vhost.d:/etc/nginx/vhost.d
      - ${NGINX_FILES_PATH:-./data}/html:/usr/share/nginx/html
      - ${NGINX_FILES_PATH:-./data}/certs:/etc/nginx/certs:ro
      - ${NGINX_FILES_PATH:-./data}/htpasswd:/etc/nginx/htpasswd:ro
    logging:
      driver: ${NGINX_WEB_LOG_DRIVER:-json-file}
      options:
        max-size: ${NGINX_WEB_LOG_MAX_SIZE:-4m}
        max-file: ${NGINX_WEB_LOG_MAX_FILE:-10}

  nginx-gen:
    image: jwilder/docker-gen
    command: -notify-sighup ${NGINX_WEB:-nginx-web} -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    container_name: ${DOCKER_GEN:-nginx-gen}
    restart: always
    volumes:
      - ${NGINX_FILES_PATH:-./data}/conf.d:/etc/nginx/conf.d
      - ${NGINX_FILES_PATH:-./data}/vhost.d:/etc/nginx/vhost.d
      - ${NGINX_FILES_PATH:-./data}/html:/usr/share/nginx/html
      - ${NGINX_FILES_PATH:-./data}/certs:/etc/nginx/certs:ro
      - ${NGINX_FILES_PATH:-./data}/htpasswd:/etc/nginx/htpasswd:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro
    logging:
      driver: ${NGINX_GEN_LOG_DRIVER:-json-file}
      options:
        max-size: ${NGINX_GEN_LOG_MAX_SIZE:-2m}
        max-file: ${NGINX_GEN_LOG_MAX_FILE:-10}

  nginx-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: ${LETS_ENCRYPT:-nginx-letsencrypt}
    restart: always
    volumes:
      - ${NGINX_FILES_PATH:-./data}/conf.d:/etc/nginx/conf.d
      - ${NGINX_FILES_PATH:-./data}/vhost.d:/etc/nginx/vhost.d
      - ${NGINX_FILES_PATH:-./data}/html:/usr/share/nginx/html
      - ${NGINX_FILES_PATH:-./data}/certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      NGINX_DOCKER_GEN_CONTAINER: ${DOCKER_GEN:-nginx-gen}
      NGINX_PROXY_CONTAINER: ${NGINX_WEB:-nginx-web}
    logging:
      driver: ${NGINX_LETSENCRYPT_LOG_DRIVER:-json-file}
      options:
        max-size: ${NGINX_LETSENCRYPT_LOG_MAX_SIZE:-2m}
        max-file: ${NGINX_LETSENCRYPT_LOG_MAX_FILE:-10}

networks:
  default:
    external:
      name: ${NETWORK:-webproxy}


version: "3.3"

services:
  db:
    image: mysql:5.7
    container_name: database_wp
    volumes:
      - db_data:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}	#Check .env file	#  |
      MYSQL_DATABASE: wordpress				#Your database		#  |
      MYSQL_USER: wordpress				#Your username		#  |  <-- You can change it but, replicate data below
      MYSQL_PASSWORD: PasswordMysql			#Your Password		#  |
    networks:
      - wp
      - proxy
    labels:
      - "traefik.enable=false"

  wordpress:
    image: wordpress:latest
    container_name: wordpress_site
    restart: always
    volumes:
      - ./wordpress/:/var/www/html
    #      - ./php.ini:/usr/local/etc/php/php-production.ini
    #      - ./uploads.ini:/usr/local/etc/php/conf.d/uploads.ini

    restart: always
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_USER: wordpress		#YOUR username define higher
      WORDPRESS_DB_PASSWORD: PasswordMysql	#YOUR password define higher
    networks:
      - proxy
      - wp
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:mywebsite.com"			# Your url site : ex : mywebsite.com  <-- Change it !
      - "traefik.frontrend.entryPoints=http,https"			# EntryPoints http,https
      - "traefik.docker.networks=proxy"					# Network traefik
      - "traefik.frontend.headers.forceSTSHeader=true"			#########################################
      - "traefik.frontend.headers.STSSeconds=315360000"			#					#
      - "traefik.frontend.headers.STSIncludeSubdomains=true"		#					#
      - "traefik.frontend.headers.STSPreload=true"			#	Security of traefik 		#
      - "traefik.frontend.headers.browserXSSFilter=true"		#					#
      - "traefik.frontend.headers.contentTypeNosniff=true"		#					#
      - "traefik.frontend.headers.customFrameOptionsValue=SAMEORIGIN"	#########################################

  #################################################################################################################
  #	TRAEFIK CONFIGURATION											#
  #	https://nofreedisk.space/2018/09/15/how-to-make-a-dns-record-with-ovh-and-traefik/			#
  #################################################################################################################

  traefik:
    image: traefik:1.7
    container_name: traefik
    restart: always

    volumes:
      - ./trafik/toml/traefik.toml:/etc/traefik/traefik.toml:ro
      - ./traefik/acme/:/etc/traefik/acme/
      - ./traefik/log/traefik.log:/etc/traefik/traefik.log
      - ./traefik/log/access.log:/etc/traefik/access.log
      - /var/run/docker.sock:/var/run/docker.sock:ro

    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    labels:
      - traefik.enable=true
      - traefik.frontend.entryPoints=http,https
      - traefik.frontend.passHostHeader=true
      - traefik.frontend.rule=stats.mywebsite.com                #It's traefik dashboard access on https. Change it with what you want !
      - traefik.port=8080
      - traefik.docker.network=proxy


    environment:
      - OVH_ENDPOINT=ovh-eu
      - OVH_APPLICATION_KEY=						# Your application key received by ovh api
      - OVH_APPLICATION_SECRET=						# Your application secret received by ovh api
      - OVH_CONSUMER_KEY=						# Your consumer key received by ovh api
    networks:
      - proxy
      - wp


volumes:
  db_data:

networks:
  proxy:
    external: true
  wp:
